// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalApi.Data;

#nullable disable

namespace PersonalAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241110194737_MigracaoUsuario")]
    partial class MigracaoUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PersonalApi.Models.Acessorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Materiais")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("TipoAcessorios")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<int?>("ViolinoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ViolinoId");

                    b.ToTable("TB_ACESSORIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Produzido na Alemanha, utilizando os melhores materiais, a marca Pirastro é dominante no segmento de...",
                            Marca = "Pirastro",
                            Materiais = "Resina Natural de Pinho",
                            Modelo = "CV-52",
                            Nome = "Breu",
                            TipoAcessorios = 2,
                            Valor = 52.649999999999999,
                            ViolinoId = 1
                        });
                });

            modelBuilder.Entity("PersonalApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            PasswordHash = new byte[] { 85, 254, 216, 190, 195, 155, 148, 189, 112, 203, 146, 158, 198, 176, 223, 174, 6, 66, 56, 64, 173, 106, 240, 126, 196, 150, 124, 106, 132, 206, 147, 227, 13, 123, 134, 20, 105, 191, 212, 54, 71, 134, 233, 192, 185, 142, 150, 1, 69, 246, 188, 254, 186, 79, 230, 211, 56, 229, 178, 117, 240, 187, 114, 71 },
                            PasswordSalt = new byte[] { 38, 121, 119, 185, 173, 252, 57, 210, 31, 193, 91, 90, 231, 172, 76, 4, 203, 201, 224, 94, 169, 168, 233, 35, 225, 94, 246, 179, 35, 93, 121, 128, 81, 134, 102, 157, 219, 22, 169, 254, 191, 53, 132, 194, 143, 138, 42, 76, 250, 249, 237, 38, 131, 18, 122, 194, 150, 170, 217, 69, 184, 164, 74, 101, 174, 113, 6, 176, 6, 90, 163, 215, 205, 249, 73, 102, 197, 101, 134, 230, 134, 251, 49, 30, 135, 60, 16, 163, 28, 68, 45, 43, 82, 248, 215, 134, 28, 104, 91, 226, 10, 209, 123, 166, 125, 93, 74, 80, 235, 195, 92, 69, 249, 26, 100, 74, 152, 207, 107, 242, 244, 130, 192, 57, 88, 215, 193, 183 },
                            Perfil = "Admin",
                            Username = "UsuarioAdmin"
                        });
                });

            modelBuilder.Entity("PersonalApi.Models.Violino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Materiais")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_VIOLINOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Queixeira, estandarte, cravelhas e botão: Ébano. Encordoamento: M Calixto. Arco de crina natural e madeira maçaranduba. Estojo Gota. Ajuste Profissional (cavalete original, alma, pestana, cravelhas)",
                            Marca = "Eagles",
                            Materiais = "Violino: Abeto e Atiro. Ébano. Arco: Maçaranduba",
                            Modelo = "CV-12",
                            UsuarioId = 1,
                            Valor = 1283.8499999999999
                        });
                });

            modelBuilder.Entity("PersonalApi.Models.Acessorio", b =>
                {
                    b.HasOne("PersonalApi.Models.Violino", "Violino")
                        .WithMany("Acessorios")
                        .HasForeignKey("ViolinoId");

                    b.Navigation("Violino");
                });

            modelBuilder.Entity("PersonalApi.Models.Violino", b =>
                {
                    b.HasOne("PersonalApi.Models.Usuario", "Usuario")
                        .WithMany("Violinos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PersonalApi.Models.Usuario", b =>
                {
                    b.Navigation("Violinos");
                });

            modelBuilder.Entity("PersonalApi.Models.Violino", b =>
                {
                    b.Navigation("Acessorios");
                });
#pragma warning restore 612, 618
        }
    }
}
