using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace PersonalAPI.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoViolino : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 66, 252, 228, 64, 123, 188, 137, 246, 160, 63, 168, 155, 51, 254, 130, 35, 77, 0, 182, 177, 234, 138, 159, 123, 109, 14, 27, 12, 95, 172, 174, 77, 158, 180, 28, 214, 33, 234, 66, 236, 177, 195, 198, 255, 153, 180, 252, 125, 17, 230, 89, 87, 97, 129, 121, 216, 106, 240, 0, 175, 106, 15, 41, 185 }, new byte[] { 228, 63, 68, 129, 62, 83, 58, 140, 1, 101, 182, 139, 180, 209, 76, 215, 84, 251, 60, 71, 71, 230, 191, 103, 204, 96, 239, 129, 147, 78, 62, 14, 186, 78, 203, 75, 186, 166, 130, 186, 231, 73, 216, 1, 80, 89, 97, 154, 188, 87, 113, 252, 74, 173, 62, 36, 92, 109, 51, 215, 160, 142, 35, 4, 113, 162, 30, 48, 144, 185, 189, 7, 190, 14, 4, 9, 148, 200, 159, 112, 204, 140, 221, 192, 86, 55, 3, 214, 183, 42, 177, 77, 145, 60, 152, 222, 3, 242, 182, 240, 35, 31, 26, 14, 218, 161, 231, 64, 223, 147, 54, 111, 225, 240, 242, 68, 19, 148, 197, 48, 94, 228, 105, 250, 111, 160, 229, 43 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 193, 187, 208, 29, 238, 224, 65, 75, 163, 3, 92, 123, 135, 68, 135, 51, 43, 74, 63, 144, 18, 195, 46, 29, 227, 253, 168, 8, 110, 254, 161, 122, 120, 89, 254, 177, 75, 189, 142, 169, 95, 33, 112, 150, 189, 126, 14, 24, 80, 124, 143, 248, 251, 175, 13, 175, 35, 60, 51, 196, 230, 75, 98, 184 }, new byte[] { 50, 52, 138, 114, 170, 218, 19, 90, 230, 153, 67, 214, 98, 29, 87, 230, 211, 26, 118, 74, 63, 78, 24, 77, 96, 95, 87, 223, 206, 38, 22, 116, 50, 33, 109, 59, 0, 203, 236, 4, 245, 167, 81, 112, 174, 241, 12, 103, 105, 133, 6, 171, 152, 182, 249, 77, 57, 225, 224, 67, 90, 159, 212, 155, 151, 114, 73, 68, 185, 207, 89, 234, 158, 93, 0, 100, 27, 146, 250, 128, 70, 158, 223, 36, 205, 138, 55, 45, 70, 125, 242, 75, 175, 53, 103, 49, 87, 148, 45, 115, 118, 25, 23, 193, 254, 201, 93, 162, 75, 51, 67, 66, 178, 20, 186, 6, 119, 226, 134, 13, 234, 180, 204, 210, 99, 246, 203, 92 } });
        }
    }
}
