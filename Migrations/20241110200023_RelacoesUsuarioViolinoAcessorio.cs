using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace PersonalAPI.Migrations
{
    /// <inheritdoc />
    public partial class RelacoesUsuarioViolinoAcessorio : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 73, 63, 191, 107, 94, 32, 107, 123, 167, 244, 33, 245, 226, 175, 208, 213, 121, 211, 0, 29, 21, 209, 158, 200, 65, 214, 208, 156, 93, 20, 172, 247, 124, 121, 181, 232, 92, 55, 232, 188, 230, 67, 9, 137, 63, 230, 66, 250, 96, 59, 176, 141, 220, 141, 216, 62, 31, 0, 190, 20, 149, 157, 94, 154 }, new byte[] { 247, 136, 79, 31, 144, 207, 238, 180, 173, 135, 132, 213, 83, 3, 58, 167, 88, 66, 20, 39, 112, 162, 8, 96, 89, 200, 19, 37, 166, 158, 139, 244, 255, 113, 214, 167, 211, 243, 5, 126, 183, 144, 192, 107, 73, 54, 57, 137, 5, 36, 137, 95, 25, 114, 241, 66, 133, 39, 40, 115, 1, 53, 247, 157, 106, 132, 154, 233, 254, 124, 77, 211, 118, 189, 117, 0, 4, 20, 36, 146, 28, 15, 205, 228, 1, 235, 168, 220, 122, 177, 83, 253, 168, 104, 115, 61, 12, 154, 234, 237, 32, 88, 130, 164, 96, 123, 122, 139, 64, 54, 41, 155, 5, 32, 144, 200, 179, 211, 46, 95, 43, 101, 209, 44, 213, 119, 150, 145 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 13, 185, 60, 25, 102, 51, 143, 95, 247, 162, 187, 197, 182, 38, 182, 142, 52, 206, 115, 154, 178, 58, 139, 68, 159, 154, 198, 159, 63, 145, 254, 143, 12, 37, 163, 3, 41, 216, 138, 215, 143, 58, 151, 26, 144, 57, 213, 180, 172, 91, 117, 233, 212, 40, 220, 223, 119, 215, 253, 233, 13, 82, 11, 247 }, new byte[] { 83, 11, 117, 28, 67, 242, 94, 228, 64, 47, 127, 106, 97, 247, 192, 155, 210, 117, 194, 47, 62, 65, 91, 251, 138, 201, 82, 17, 151, 30, 221, 95, 250, 220, 12, 192, 137, 11, 187, 12, 200, 121, 73, 230, 242, 23, 29, 129, 29, 25, 42, 109, 62, 149, 142, 33, 13, 119, 194, 76, 92, 82, 49, 125, 233, 124, 1, 121, 192, 163, 126, 55, 157, 115, 83, 21, 183, 53, 29, 92, 28, 52, 42, 5, 75, 63, 128, 59, 65, 172, 73, 190, 16, 207, 70, 160, 174, 101, 108, 120, 101, 77, 236, 93, 146, 234, 81, 212, 232, 163, 84, 163, 71, 49, 45, 137, 42, 248, 206, 152, 52, 155, 186, 5, 73, 85, 65, 21 } });
        }
    }
}
