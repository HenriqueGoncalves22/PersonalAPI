using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace PersonalAPI.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoAcessorio : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 183, 95, 148, 4, 90, 81, 38, 84, 140, 245, 134, 213, 241, 182, 98, 55, 9, 90, 203, 68, 241, 153, 61, 146, 226, 94, 175, 222, 221, 118, 120, 228, 34, 198, 104, 28, 134, 223, 138, 97, 222, 123, 118, 37, 169, 3, 203, 191, 153, 38, 174, 223, 152, 11, 127, 17, 30, 170, 34, 7, 125, 154, 240, 241 }, new byte[] { 111, 117, 185, 237, 208, 132, 186, 154, 182, 80, 21, 90, 173, 190, 114, 75, 215, 165, 217, 234, 221, 180, 215, 139, 28, 65, 65, 234, 220, 28, 182, 66, 245, 136, 27, 247, 209, 121, 142, 188, 66, 86, 170, 65, 80, 255, 233, 167, 12, 158, 138, 171, 4, 11, 253, 112, 146, 111, 101, 19, 179, 108, 141, 56, 190, 246, 228, 77, 156, 132, 29, 193, 106, 199, 102, 73, 122, 212, 192, 13, 76, 15, 65, 52, 211, 63, 213, 201, 60, 169, 104, 113, 165, 63, 64, 8, 43, 145, 120, 149, 237, 9, 215, 83, 61, 64, 198, 30, 11, 75, 75, 136, 168, 94, 157, 204, 55, 86, 231, 84, 5, 132, 75, 173, 49, 206, 163, 58 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 66, 252, 228, 64, 123, 188, 137, 246, 160, 63, 168, 155, 51, 254, 130, 35, 77, 0, 182, 177, 234, 138, 159, 123, 109, 14, 27, 12, 95, 172, 174, 77, 158, 180, 28, 214, 33, 234, 66, 236, 177, 195, 198, 255, 153, 180, 252, 125, 17, 230, 89, 87, 97, 129, 121, 216, 106, 240, 0, 175, 106, 15, 41, 185 }, new byte[] { 228, 63, 68, 129, 62, 83, 58, 140, 1, 101, 182, 139, 180, 209, 76, 215, 84, 251, 60, 71, 71, 230, 191, 103, 204, 96, 239, 129, 147, 78, 62, 14, 186, 78, 203, 75, 186, 166, 130, 186, 231, 73, 216, 1, 80, 89, 97, 154, 188, 87, 113, 252, 74, 173, 62, 36, 92, 109, 51, 215, 160, 142, 35, 4, 113, 162, 30, 48, 144, 185, 189, 7, 190, 14, 4, 9, 148, 200, 159, 112, 204, 140, 221, 192, 86, 55, 3, 214, 183, 42, 177, 77, 145, 60, 152, 222, 3, 242, 182, 240, 35, 31, 26, 14, 218, 161, 231, 64, 223, 147, 54, 111, 225, 240, 242, 68, 19, 148, 197, 48, 94, 228, 105, 250, 111, 160, 229, 43 } });
        }
    }
}
