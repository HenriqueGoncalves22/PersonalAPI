// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalApi.Data;

#nullable disable

namespace PersonalAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241110200023_RelacoesUsuarioViolinoAcessorio")]
    partial class RelacoesUsuarioViolinoAcessorio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PersonalApi.Models.Acessorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Materiais")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("TipoAcessorios")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<int?>("ViolinoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ViolinoId");

                    b.ToTable("TB_ACESSORIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Produzido na Alemanha, utilizando os melhores materiais, a marca Pirastro é dominante no segmento de...",
                            Marca = "Pirastro",
                            Materiais = "Resina Natural de Pinho",
                            Modelo = "CV-52",
                            Nome = "Breu",
                            TipoAcessorios = 2,
                            Valor = 52.649999999999999,
                            ViolinoId = 1
                        });
                });

            modelBuilder.Entity("PersonalApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            PasswordHash = new byte[] { 73, 63, 191, 107, 94, 32, 107, 123, 167, 244, 33, 245, 226, 175, 208, 213, 121, 211, 0, 29, 21, 209, 158, 200, 65, 214, 208, 156, 93, 20, 172, 247, 124, 121, 181, 232, 92, 55, 232, 188, 230, 67, 9, 137, 63, 230, 66, 250, 96, 59, 176, 141, 220, 141, 216, 62, 31, 0, 190, 20, 149, 157, 94, 154 },
                            PasswordSalt = new byte[] { 247, 136, 79, 31, 144, 207, 238, 180, 173, 135, 132, 213, 83, 3, 58, 167, 88, 66, 20, 39, 112, 162, 8, 96, 89, 200, 19, 37, 166, 158, 139, 244, 255, 113, 214, 167, 211, 243, 5, 126, 183, 144, 192, 107, 73, 54, 57, 137, 5, 36, 137, 95, 25, 114, 241, 66, 133, 39, 40, 115, 1, 53, 247, 157, 106, 132, 154, 233, 254, 124, 77, 211, 118, 189, 117, 0, 4, 20, 36, 146, 28, 15, 205, 228, 1, 235, 168, 220, 122, 177, 83, 253, 168, 104, 115, 61, 12, 154, 234, 237, 32, 88, 130, 164, 96, 123, 122, 139, 64, 54, 41, 155, 5, 32, 144, 200, 179, 211, 46, 95, 43, 101, 209, 44, 213, 119, 150, 145 },
                            Perfil = "Admin",
                            Username = "UsuarioAdmin"
                        });
                });

            modelBuilder.Entity("PersonalApi.Models.Violino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Materiais")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_VIOLINOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Queixeira, estandarte, cravelhas e botão: Ébano. Encordoamento: M Calixto. Arco de crina natural e madeira maçaranduba. Estojo Gota. Ajuste Profissional (cavalete original, alma, pestana, cravelhas)",
                            Marca = "Eagles",
                            Materiais = "Violino: Abeto e Atiro. Ébano. Arco: Maçaranduba",
                            Modelo = "CV-12",
                            UsuarioId = 1,
                            Valor = 1283.8499999999999
                        });
                });

            modelBuilder.Entity("PersonalApi.Models.Acessorio", b =>
                {
                    b.HasOne("PersonalApi.Models.Violino", "Violino")
                        .WithMany("Acessorios")
                        .HasForeignKey("ViolinoId");

                    b.Navigation("Violino");
                });

            modelBuilder.Entity("PersonalApi.Models.Violino", b =>
                {
                    b.HasOne("PersonalApi.Models.Usuario", "Usuario")
                        .WithMany("Violinos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PersonalApi.Models.Usuario", b =>
                {
                    b.Navigation("Violinos");
                });

            modelBuilder.Entity("PersonalApi.Models.Violino", b =>
                {
                    b.Navigation("Acessorios");
                });
#pragma warning restore 612, 618
        }
    }
}
